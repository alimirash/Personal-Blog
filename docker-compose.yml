services:
  backend:
    build: ./backend
    container_name: blog_backend
    restart: always
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=False
      - SECRET_KEY=change_this_to_a_secure_random_string
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DB_NAME=${DB_NAME:-alimirash}
      - DB_USER=${DB_USER:-alimirash}
      - DB_PASSWORD=${DB_PASSWORD:-Aa@80233280}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    command: >
      bash -c "
        python manage.py makemigrations api &&
        python manage.py migrate &&
        python manage.py load_games &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 blog.wsgi:application
      "

  db:
    image: postgres:13
    container_name: blog_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ./frontend:/app
      # - /app/node_modules
    environment:
      - POSTGRES_USER=${DB_USER:-alimirash}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-Aa@80233280}
      - POSTGRES_DB=${DB_NAME:-alimirash}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-alimirash}"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: blog_frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  nginx:
    image: nginx:1.21
    container_name: blog_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume:
